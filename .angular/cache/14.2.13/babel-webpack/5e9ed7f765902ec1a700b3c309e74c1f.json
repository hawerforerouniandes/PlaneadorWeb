{"ast":null,"code":"/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Subject } from 'rxjs';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\n\nfunction joinWithSlash(start, end) {\n  if (start.length == 0) {\n    return end;\n  }\n\n  if (end.length == 0) {\n    return start;\n  }\n\n  let slashes = 0;\n\n  if (start.endsWith('/')) {\n    slashes++;\n  }\n\n  if (end.startsWith('/')) {\n    slashes++;\n  }\n\n  if (slashes == 2) {\n    return start + end.substring(1);\n  }\n\n  if (slashes == 1) {\n    return start + end;\n  }\n\n  return start + '/' + end;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\n\n\nfunction stripTrailingSlash(url) {\n  const match = url.match(/#|\\?|$/);\n  const pathEndIdx = match && match.index || url.length;\n  const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n  return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\n\n\nfunction normalizeQueryParams(params) {\n  return params && params[0] !== '?' ? '?' + params : params;\n}\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n\n\nclass SpyLocation {\n  constructor() {\n    this.urlChanges = [];\n    this._history = [new LocationState('', '', null)];\n    this._historyIndex = 0;\n    /** @internal */\n\n    this._subject = new EventEmitter();\n    /** @internal */\n\n    this._baseHref = '';\n    /** @internal */\n\n    this._locationStrategy = null;\n    /** @internal */\n\n    this._urlChangeListeners = [];\n    /** @internal */\n\n    this._urlChangeSubscription = null;\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this._urlChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this._urlChangeListeners = [];\n  }\n\n  setInitialPath(url) {\n    this._history[this._historyIndex].path = url;\n  }\n\n  setBaseHref(url) {\n    this._baseHref = url;\n  }\n\n  path() {\n    return this._history[this._historyIndex].path;\n  }\n\n  getState() {\n    return this._history[this._historyIndex].state;\n  }\n\n  isCurrentPathEqualTo(path, query = '') {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n    return currPath == givenPath + (query.length > 0 ? '?' + query : '');\n  }\n\n  simulateUrlPop(pathname) {\n    this._subject.emit({\n      'url': pathname,\n      'pop': true,\n      'type': 'popstate'\n    });\n  }\n\n  simulateHashChange(pathname) {\n    const path = this.prepareExternalUrl(pathname);\n    this.pushHistory(path, '', null);\n    this.urlChanges.push('hash: ' + pathname); // the browser will automatically fire popstate event before each `hashchange` event, so we need\n    // to simulate it.\n\n    this._subject.emit({\n      'url': pathname,\n      'pop': true,\n      'type': 'popstate'\n    });\n\n    this._subject.emit({\n      'url': pathname,\n      'pop': true,\n      'type': 'hashchange'\n    });\n  }\n\n  prepareExternalUrl(url) {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n\n    return this._baseHref + url;\n  }\n\n  go(path, query = '', state = null) {\n    path = this.prepareExternalUrl(path);\n    this.pushHistory(path, query, state);\n    const locationState = this._history[this._historyIndex - 1];\n\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.urlChanges.push(url);\n\n    this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n  }\n\n  replaceState(path, query = '', state = null) {\n    path = this.prepareExternalUrl(path);\n    const history = this._history[this._historyIndex];\n\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.urlChanges.push('replace: ' + url);\n\n    this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n  }\n\n  forward() {\n    if (this._historyIndex < this._history.length - 1) {\n      this._historyIndex++;\n\n      this._subject.emit({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n\n      this._subject.emit({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n\n  historyGo(relativePosition = 0) {\n    const nextPageIndex = this._historyIndex + relativePosition;\n\n    if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n      this._historyIndex = nextPageIndex;\n\n      this._subject.emit({\n        'url': this.path(),\n        'state': this.getState(),\n        'pop': true,\n        'type': 'popstate'\n      });\n    }\n  }\n\n  onUrlChange(fn) {\n    this._urlChangeListeners.push(fn);\n\n    if (!this._urlChangeSubscription) {\n      this._urlChangeSubscription = this.subscribe(v => {\n        this._notifyUrlChangeListeners(v.url, v.state);\n      });\n    }\n\n    return () => {\n      var _a;\n\n      const fnIndex = this._urlChangeListeners.indexOf(fn);\n\n      this._urlChangeListeners.splice(fnIndex, 1);\n\n      if (this._urlChangeListeners.length === 0) {\n        (_a = this._urlChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._urlChangeSubscription = null;\n      }\n    };\n  }\n  /** @internal */\n\n\n  _notifyUrlChangeListeners(url = '', state) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n\n  subscribe(onNext, onThrow, onReturn) {\n    return this._subject.subscribe({\n      next: onNext,\n      error: onThrow,\n      complete: onReturn\n    });\n  }\n\n  normalize(url) {\n    return null;\n  }\n\n  pushHistory(path, query, state) {\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n\n    this._history.push(new LocationState(path, query, state));\n\n    this._historyIndex = this._history.length - 1;\n  }\n\n}\n\nSpyLocation.ɵfac = function SpyLocation_Factory(t) {\n  return new (t || SpyLocation)();\n};\n\nSpyLocation.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SpyLocation,\n  factory: SpyLocation.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SpyLocation, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass LocationState {\n  constructor(path, query, state) {\n    this.path = path;\n    this.query = query;\n    this.state = state;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n\n\nclass MockLocationStrategy extends LocationStrategy {\n  constructor() {\n    super();\n    this.internalBaseHref = '/';\n    this.internalPath = '/';\n    this.internalTitle = '';\n    this.urlChanges = [];\n    /** @internal */\n\n    this._subject = new EventEmitter();\n    this.stateChanges = [];\n  }\n\n  simulatePopState(url) {\n    this.internalPath = url;\n\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash = false) {\n    return this.internalPath;\n  }\n\n  prepareExternalUrl(internal) {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx, title, path, query) {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n    this.internalTitle = title;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.internalPath = url;\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx, title, path, query) {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n    this.internalTitle = title;\n    const url = path + (query.length > 0 ? '?' + query : '');\n    this.internalPath = url;\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn) {\n    this._subject.subscribe({\n      next: fn\n    });\n  }\n\n  getBaseHref() {\n    return this.internalBaseHref;\n  }\n\n  back() {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward() {\n    throw 'not implemented';\n  }\n\n  getState() {\n    return this.stateChanges[(this.stateChanges.length || 1) - 1];\n  }\n\n}\n\nMockLocationStrategy.ɵfac = function MockLocationStrategy_Factory(t) {\n  return new (t || MockLocationStrategy)();\n};\n\nMockLocationStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MockLocationStrategy,\n  factory: MockLocationStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MockLocationStrategy, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass _MockPopStateEvent {\n  constructor(newUrl) {\n    this.newUrl = newUrl;\n    this.pop = true;\n    this.type = 'popstate';\n  }\n\n}\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\n\n\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr, baseHref) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase; // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n\n  let parsedUrl;\n\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8]\n    };\n  }\n\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || ''\n  };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\n\n\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n\nclass MockPlatformLocation {\n  constructor(config) {\n    this.baseHref = '';\n    this.hashUpdate = new Subject();\n    this.urlChangeIndex = 0;\n    this.urlChanges = [{\n      hostname: '',\n      protocol: '',\n      port: '',\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null\n    }];\n\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n      const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n      this.urlChanges[0] = Object.assign({}, parsedChanges);\n    }\n  }\n\n  get hostname() {\n    return this.urlChanges[this.urlChangeIndex].hostname;\n  }\n\n  get protocol() {\n    return this.urlChanges[this.urlChangeIndex].protocol;\n  }\n\n  get port() {\n    return this.urlChanges[this.urlChangeIndex].port;\n  }\n\n  get pathname() {\n    return this.urlChanges[this.urlChangeIndex].pathname;\n  }\n\n  get search() {\n    return this.urlChanges[this.urlChangeIndex].search;\n  }\n\n  get hash() {\n    return this.urlChanges[this.urlChangeIndex].hash;\n  }\n\n  get state() {\n    return this.urlChanges[this.urlChangeIndex].state;\n  }\n\n  getBaseHrefFromDOM() {\n    return this.baseHref;\n  }\n\n  onPopState(fn) {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n    return () => {};\n  }\n\n  onHashChange(fn) {\n    const subscription = this.hashUpdate.subscribe(fn);\n    return () => subscription.unsubscribe();\n  }\n\n  get href() {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n\n  get url() {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n\n  parseChanges(state, url, baseHref = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return Object.assign(Object.assign({}, parseUrl(url, baseHref)), {\n      state\n    });\n  }\n\n  replaceState(state, title, newUrl) {\n    const {\n      pathname,\n      search,\n      state: parsedState,\n      hash\n    } = this.parseChanges(state, newUrl);\n    this.urlChanges[this.urlChangeIndex] = Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), {\n      pathname,\n      search,\n      hash,\n      state: parsedState\n    });\n  }\n\n  pushState(state, title, newUrl) {\n    const {\n      pathname,\n      search,\n      state: parsedState,\n      hash\n    } = this.parseChanges(state, newUrl);\n\n    if (this.urlChangeIndex > 0) {\n      this.urlChanges.splice(this.urlChangeIndex + 1);\n    }\n\n    this.urlChanges.push(Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), {\n      pathname,\n      search,\n      hash,\n      state: parsedState\n    }));\n    this.urlChangeIndex = this.urlChanges.length - 1;\n  }\n\n  forward() {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n\n    if (this.urlChangeIndex < this.urlChanges.length) {\n      this.urlChangeIndex++;\n    }\n\n    this.scheduleHashUpdate(oldHash, oldUrl);\n  }\n\n  back() {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n\n    if (this.urlChangeIndex > 0) {\n      this.urlChangeIndex--;\n    }\n\n    this.scheduleHashUpdate(oldHash, oldUrl);\n  }\n\n  historyGo(relativePosition = 0) {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    const nextPageIndex = this.urlChangeIndex + relativePosition;\n\n    if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n      this.urlChangeIndex = nextPageIndex;\n    }\n\n    this.scheduleHashUpdate(oldHash, oldUrl);\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  scheduleHashUpdate(oldHash, oldUrl) {\n    if (oldHash !== this.hash) {\n      scheduleMicroTask(() => this.hashUpdate.next({\n        type: 'hashchange',\n        state: null,\n        oldUrl,\n        newUrl: this.url\n      }));\n    }\n  }\n\n}\n\nMockPlatformLocation.ɵfac = function MockPlatformLocation_Factory(t) {\n  return new (t || MockPlatformLocation)(i0.ɵɵinject(MOCK_PLATFORM_LOCATION_CONFIG, 8));\n};\n\nMockPlatformLocation.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MockPlatformLocation,\n  factory: MockPlatformLocation.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MockPlatformLocation, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MOCK_PLATFORM_LOCATION_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nfunction scheduleMicroTask(cb) {\n  Promise.resolve().then(cb);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation };","map":{"version":3,"names":["i0","EventEmitter","Injectable","InjectionToken","Inject","Optional","LocationStrategy","Subject","joinWithSlash","start","end","length","slashes","endsWith","startsWith","substring","stripTrailingSlash","url","match","pathEndIdx","index","droppedSlashIdx","slice","normalizeQueryParams","params","SpyLocation","constructor","urlChanges","_history","LocationState","_historyIndex","_subject","_baseHref","_locationStrategy","_urlChangeListeners","_urlChangeSubscription","ngOnDestroy","_a","unsubscribe","setInitialPath","path","setBaseHref","getState","state","isCurrentPathEqualTo","query","givenPath","currPath","simulateUrlPop","pathname","emit","simulateHashChange","prepareExternalUrl","pushHistory","push","go","locationState","_notifyUrlChangeListeners","replaceState","history","forward","back","historyGo","relativePosition","nextPageIndex","onUrlChange","fn","subscribe","v","fnIndex","indexOf","splice","forEach","onNext","onThrow","onReturn","next","error","complete","normalize","ɵfac","ɵprov","type","MockLocationStrategy","internalBaseHref","internalPath","internalTitle","stateChanges","simulatePopState","_MockPopStateEvent","includeHash","internal","pushState","ctx","title","externalUrl","onPopState","getBaseHref","pop","nextUrl","newUrl","urlParse","parseUrl","urlStr","baseHref","verifyProtocol","serverBase","test","parsedUrl","URL","e","result","exec","Error","hostSplit","split","protocol","hostname","port","search","hash","MOCK_PLATFORM_LOCATION_CONFIG","MockPlatformLocation","config","hashUpdate","urlChangeIndex","appBaseHref","parsedChanges","parseChanges","startUrl","Object","assign","getBaseHrefFromDOM","onHashChange","subscription","href","JSON","parse","stringify","parsedState","oldUrl","oldHash","scheduleHashUpdate","scheduleMicroTask","undefined","decorators","args","cb","Promise","resolve","then"],"sources":["/Users/hawerforero/Documents/miso/III/Proyectos/UX/PlaneadorWeb/node_modules/@angular/common/fesm2015/testing.mjs"],"sourcesContent":["/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nfunction joinWithSlash(start, end) {\n    if (start.length == 0) {\n        return end;\n    }\n    if (end.length == 0) {\n        return start;\n    }\n    let slashes = 0;\n    if (start.endsWith('/')) {\n        slashes++;\n    }\n    if (end.startsWith('/')) {\n        slashes++;\n    }\n    if (slashes == 2) {\n        return start + end.substring(1);\n    }\n    if (slashes == 1) {\n        return start + end;\n    }\n    return start + '/' + end;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nfunction stripTrailingSlash(url) {\n    const match = url.match(/#|\\?|$/);\n    const pathEndIdx = match && match.index || url.length;\n    const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nfunction normalizeQueryParams(params) {\n    return params && params[0] !== '?' ? '?' + params : params;\n}\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\nclass SpyLocation {\n    constructor() {\n        this.urlChanges = [];\n        this._history = [new LocationState('', '', null)];\n        this._historyIndex = 0;\n        /** @internal */\n        this._subject = new EventEmitter();\n        /** @internal */\n        this._baseHref = '';\n        /** @internal */\n        this._locationStrategy = null;\n        /** @internal */\n        this._urlChangeListeners = [];\n        /** @internal */\n        this._urlChangeSubscription = null;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._urlChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._urlChangeListeners = [];\n    }\n    setInitialPath(url) {\n        this._history[this._historyIndex].path = url;\n    }\n    setBaseHref(url) {\n        this._baseHref = url;\n    }\n    path() {\n        return this._history[this._historyIndex].path;\n    }\n    getState() {\n        return this._history[this._historyIndex].state;\n    }\n    isCurrentPathEqualTo(path, query = '') {\n        const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n        const currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n        return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n    }\n    simulateUrlPop(pathname) {\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n    }\n    simulateHashChange(pathname) {\n        const path = this.prepareExternalUrl(pathname);\n        this.pushHistory(path, '', null);\n        this.urlChanges.push('hash: ' + pathname);\n        // the browser will automatically fire popstate event before each `hashchange` event, so we need\n        // to simulate it.\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\n        this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\n    }\n    prepareExternalUrl(url) {\n        if (url.length > 0 && !url.startsWith('/')) {\n            url = '/' + url;\n        }\n        return this._baseHref + url;\n    }\n    go(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        this.pushHistory(path, query, state);\n        const locationState = this._history[this._historyIndex - 1];\n        if (locationState.path == path && locationState.query == query) {\n            return;\n        }\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push(url);\n        this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n    replaceState(path, query = '', state = null) {\n        path = this.prepareExternalUrl(path);\n        const history = this._history[this._historyIndex];\n        if (history.path == path && history.query == query) {\n            return;\n        }\n        history.path = path;\n        history.query = query;\n        history.state = state;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.urlChanges.push('replace: ' + url);\n        this._notifyUrlChangeListeners(path + normalizeQueryParams(query), state);\n    }\n    forward() {\n        if (this._historyIndex < (this._history.length - 1)) {\n            this._historyIndex++;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    back() {\n        if (this._historyIndex > 0) {\n            this._historyIndex--;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    historyGo(relativePosition = 0) {\n        const nextPageIndex = this._historyIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this._history.length) {\n            this._historyIndex = nextPageIndex;\n            this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true, 'type': 'popstate' });\n        }\n    }\n    onUrlChange(fn) {\n        this._urlChangeListeners.push(fn);\n        if (!this._urlChangeSubscription) {\n            this._urlChangeSubscription = this.subscribe(v => {\n                this._notifyUrlChangeListeners(v.url, v.state);\n            });\n        }\n        return () => {\n            var _a;\n            const fnIndex = this._urlChangeListeners.indexOf(fn);\n            this._urlChangeListeners.splice(fnIndex, 1);\n            if (this._urlChangeListeners.length === 0) {\n                (_a = this._urlChangeSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n                this._urlChangeSubscription = null;\n            }\n        };\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n        this._urlChangeListeners.forEach(fn => fn(url, state));\n    }\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    }\n    normalize(url) {\n        return null;\n    }\n    pushHistory(path, query, state) {\n        if (this._historyIndex > 0) {\n            this._history.splice(this._historyIndex + 1);\n        }\n        this._history.push(new LocationState(path, query, state));\n        this._historyIndex = this._history.length - 1;\n    }\n}\nSpyLocation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SpyLocation, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSpyLocation.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SpyLocation });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SpyLocation, decorators: [{\n            type: Injectable\n        }] });\nclass LocationState {\n    constructor(path, query, state) {\n        this.path = path;\n        this.query = query;\n        this.state = state;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\nclass MockLocationStrategy extends LocationStrategy {\n    constructor() {\n        super();\n        this.internalBaseHref = '/';\n        this.internalPath = '/';\n        this.internalTitle = '';\n        this.urlChanges = [];\n        /** @internal */\n        this._subject = new EventEmitter();\n        this.stateChanges = [];\n    }\n    simulatePopState(url) {\n        this.internalPath = url;\n        this._subject.emit(new _MockPopStateEvent(this.path()));\n    }\n    path(includeHash = false) {\n        return this.internalPath;\n    }\n    prepareExternalUrl(internal) {\n        if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n            return this.internalBaseHref + internal.substring(1);\n        }\n        return this.internalBaseHref + internal;\n    }\n    pushState(ctx, title, path, query) {\n        // Add state change to changes array\n        this.stateChanges.push(ctx);\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push(externalUrl);\n    }\n    replaceState(ctx, title, path, query) {\n        // Reset the last index of stateChanges to the ctx (state) object\n        this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n        this.internalTitle = title;\n        const url = path + (query.length > 0 ? ('?' + query) : '');\n        this.internalPath = url;\n        const externalUrl = this.prepareExternalUrl(url);\n        this.urlChanges.push('replace: ' + externalUrl);\n    }\n    onPopState(fn) {\n        this._subject.subscribe({ next: fn });\n    }\n    getBaseHref() {\n        return this.internalBaseHref;\n    }\n    back() {\n        if (this.urlChanges.length > 0) {\n            this.urlChanges.pop();\n            this.stateChanges.pop();\n            const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n            this.simulatePopState(nextUrl);\n        }\n    }\n    forward() {\n        throw 'not implemented';\n    }\n    getState() {\n        return this.stateChanges[(this.stateChanges.length || 1) - 1];\n    }\n}\nMockLocationStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockLocationStrategy, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMockLocationStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockLocationStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockLocationStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nclass _MockPopStateEvent {\n    constructor(newUrl) {\n        this.newUrl = newUrl;\n        this.pop = true;\n        this.type = 'popstate';\n    }\n}\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nfunction parseUrl(urlStr, baseHref) {\n    const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n    let serverBase;\n    // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n    // an arbitrary base URL which can be removed afterward.\n    if (!verifyProtocol.test(urlStr)) {\n        serverBase = 'http://empty.com/';\n    }\n    let parsedUrl;\n    try {\n        parsedUrl = new URL(urlStr, serverBase);\n    }\n    catch (e) {\n        const result = urlParse.exec(serverBase || '' + urlStr);\n        if (!result) {\n            throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n        }\n        const hostSplit = result[4].split(':');\n        parsedUrl = {\n            protocol: result[1],\n            hostname: hostSplit[0],\n            port: hostSplit[1] || '',\n            pathname: result[5],\n            search: result[6],\n            hash: result[8],\n        };\n    }\n    if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n        parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n    }\n    return {\n        hostname: !serverBase && parsedUrl.hostname || '',\n        protocol: !serverBase && parsedUrl.protocol || '',\n        port: !serverBase && parsedUrl.port || '',\n        pathname: parsedUrl.pathname || '/',\n        search: parsedUrl.search || '',\n        hash: parsedUrl.hash || '',\n    };\n}\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nconst MOCK_PLATFORM_LOCATION_CONFIG = new InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\nclass MockPlatformLocation {\n    constructor(config) {\n        this.baseHref = '';\n        this.hashUpdate = new Subject();\n        this.urlChangeIndex = 0;\n        this.urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\n        if (config) {\n            this.baseHref = config.appBaseHref || '';\n            const parsedChanges = this.parseChanges(null, config.startUrl || 'http://_empty_/', this.baseHref);\n            this.urlChanges[0] = Object.assign({}, parsedChanges);\n        }\n    }\n    get hostname() {\n        return this.urlChanges[this.urlChangeIndex].hostname;\n    }\n    get protocol() {\n        return this.urlChanges[this.urlChangeIndex].protocol;\n    }\n    get port() {\n        return this.urlChanges[this.urlChangeIndex].port;\n    }\n    get pathname() {\n        return this.urlChanges[this.urlChangeIndex].pathname;\n    }\n    get search() {\n        return this.urlChanges[this.urlChangeIndex].search;\n    }\n    get hash() {\n        return this.urlChanges[this.urlChangeIndex].hash;\n    }\n    get state() {\n        return this.urlChanges[this.urlChangeIndex].state;\n    }\n    getBaseHrefFromDOM() {\n        return this.baseHref;\n    }\n    onPopState(fn) {\n        // No-op: a state stack is not implemented, so\n        // no events will ever come.\n        return () => { };\n    }\n    onHashChange(fn) {\n        const subscription = this.hashUpdate.subscribe(fn);\n        return () => subscription.unsubscribe();\n    }\n    get href() {\n        let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n        url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n        return url;\n    }\n    get url() {\n        return `${this.pathname}${this.search}${this.hash}`;\n    }\n    parseChanges(state, url, baseHref = '') {\n        // When the `history.state` value is stored, it is always copied.\n        state = JSON.parse(JSON.stringify(state));\n        return Object.assign(Object.assign({}, parseUrl(url, baseHref)), { state });\n    }\n    replaceState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        this.urlChanges[this.urlChangeIndex] = Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), { pathname, search, hash, state: parsedState });\n    }\n    pushState(state, title, newUrl) {\n        const { pathname, search, state: parsedState, hash } = this.parseChanges(state, newUrl);\n        if (this.urlChangeIndex > 0) {\n            this.urlChanges.splice(this.urlChangeIndex + 1);\n        }\n        this.urlChanges.push(Object.assign(Object.assign({}, this.urlChanges[this.urlChangeIndex]), { pathname, search, hash, state: parsedState }));\n        this.urlChangeIndex = this.urlChanges.length - 1;\n    }\n    forward() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex < this.urlChanges.length) {\n            this.urlChangeIndex++;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    back() {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        if (this.urlChangeIndex > 0) {\n            this.urlChangeIndex--;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    historyGo(relativePosition = 0) {\n        const oldUrl = this.url;\n        const oldHash = this.hash;\n        const nextPageIndex = this.urlChangeIndex + relativePosition;\n        if (nextPageIndex >= 0 && nextPageIndex < this.urlChanges.length) {\n            this.urlChangeIndex = nextPageIndex;\n        }\n        this.scheduleHashUpdate(oldHash, oldUrl);\n    }\n    getState() {\n        return this.state;\n    }\n    scheduleHashUpdate(oldHash, oldUrl) {\n        if (oldHash !== this.hash) {\n            scheduleMicroTask(() => this.hashUpdate.next({ type: 'hashchange', state: null, oldUrl, newUrl: this.url }));\n        }\n    }\n}\nMockPlatformLocation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockPlatformLocation, deps: [{ token: MOCK_PLATFORM_LOCATION_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMockPlatformLocation.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockPlatformLocation });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: MockPlatformLocation, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MOCK_PLATFORM_LOCATION_CONFIG]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\nfunction scheduleMicroTask(cb) {\n    Promise.resolve().then(cb);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MOCK_PLATFORM_LOCATION_CONFIG, MockLocationStrategy, MockPlatformLocation, SpyLocation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}